trigger: none
 
pr:
  branches:
    include:
    - develop

pool:
  vmImage: ubuntu-latest
  name: Azure Pipelines
  demands: maven

parameters:
  - name: MAVEN_CACHE_FOLDER
    type: string
    default: '$(HOME)/.m2/repository'
  - name: MAVEN_CLEAN
    type: boolean
    default: true
  - name: TEST_TIMEOUT_MINUTES
    type: number
    default: 5
  - name: NEW_VERSION
    type: string
    default: '1.0.0-SNAPSHOT'
  

variables:
  - group: anypoint-platform-dev-variables
  - group: anypoint-platform-variables

jobs:
- job: packageAndTestJob
  displayName: 'Package and Test'
  steps:
    - task: Cache@2
      displayName: 'Cache Maven local repo'
      inputs:
        key: '"funcs" | maven | "$(Agent.OS)" | pom.xml'
        path: $(MAVEN_CACHE_FOLDER)

    - task: DownloadSecureFile@1
      displayName: 'Download Settings'
      inputs:
        secureFile: 'settings.xml'

    - task: Maven@4
      displayName: 'Package'
      inputs:
        script: |
          if [ "$(MAVEN_CLEAN)" = "true" ]; then
            mvn clean package
          else
            mvn package
          fi
        mavenPomFile: 'pom.xml'
        options: '-s $(Agent.TempDirectory)/settings.xml'

    - task: Maven@4
      displayName: 'MUnit Test'
      inputs:
        script: |
          if [ "$(MAVEN_CLEAN)" = "true" ]; then
            mvn clean test
          else
            mvn test
          fi
        mavenPomFile: 'pom.xml'
        options: '-s $(Agent.TempDirectory)/settings.xml'

- job: deployJob
  displayName: 'Deploy'
  dependsOn: packageAndTestJob
  steps:
    - task: DownloadSecureFile@1
      displayName: 'Download Settings'
      inputs:
        secureFile: 'settings.xml'
  
    - task: Bash@3
      displayName: 'Update pom.xml version - NEXUS'
      inputs:
        filePath: 'update-pom-version.sh'
      env:
        NEW_VERSION: '$(NEW_VERSION)'
        DEPLOY_CLOUDHUB: false
        
    - task: Maven@4
      displayName: 'Package'
      inputs:
        script: |
          if [ "$(MAVEN_CLEAN)" = "true" ]; then
            mvn clean package
          else
            mvn package
          fi
        mavenPomFile: 'pom.xml'
        options: '-s $(Agent.TempDirectory)/settings.xml'
        
    - task: Bash@3
      displayName: 'Update pom.xml version - DEPLOY'
      inputs:
        filePath: 'update-pom-version.sh'
      env:
        NEW_VERSION: '$(NEW_VERSION)'
        DEPLOY_CLOUDHUB: true
        
    - task: Maven@4
      displayName: "Deploy: Exchange"
      inputs:
        goals: 'deploy'
        mavenPomFile: 'pom.xml'
        options: "--settings $(Agent.TempDirectory)/settings.xml \
                  -DskipTests=true \
                  -Dconn.app.client.id=$(conn.app.client.id) \
                  -Dconn.app.client.secret=$(conn.app.client.secret)"

    - task: Maven@4
      displayName: "Deploy: Cloudhub"
      inputs:
        goals: 'deploy'
        mavenPomFile: 'pom.xml'
        options: "--settings $(Agent.TempDirectory)/settings.xml \
                  -DmuleDeploy \
                  -Denvironment=$(environment) \
                  -Dconn.app.client.id=$(conn.app.client.id) \
                  -Dconn.app.client.secret=$(conn.app.client.secret)"
